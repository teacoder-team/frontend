name: Build and Push Docker Image

on:
    push:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: read
    packages: write
    id-token: write

jobs:
    install:
        name: üõ†Ô∏è Install dependencies
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun install

    build-nextjs:
        name: üèóÔ∏è Build Next.js
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Restore dependencies
              run: bun install

            - name: Build Next.js project
              run: bun run build
              env:
                  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
                  NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}

    build-docker:
        name: üê≥ Build Docker Image
        runs-on: ubuntu-latest
        needs: build-nextjs
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
                  cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
                  cache-to: type=inline
